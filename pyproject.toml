#############################
# Basic packaging for VMamba
# Minimal initial version; refine as needed.
#############################

[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "vmamba"
version = "0.1.0"
description = "VMamba: Visual State Space Model (official implementation)"
readme = "README.md"
requires-python = ">=3.8"
license = {file = "LICENSE"}
authors = [
  {name = "Yue Liu"},
  {name = "VMamba Contributors"}
]
keywords = ["vmamba", "vision", "state-space-model", "deep-learning", "pytorch"]
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: MIT License",
  "Operating System :: POSIX :: Linux",
  "Intended Audience :: Science/Research",
  "Topic :: Scientific/Engineering :: Artificial Intelligence"
]

# Core runtime dependencies kept lean; heavy / task-specific grouped into extras.
dependencies = [
  # Keep runtime absolutely minimal; assume user already installed torch + torchvision, numpy, etc.
  # Only list lesser-known / critical helpers that are not guaranteed in most DL envs.
  "timm==0.4.12",   # specific older timm needed for compatibility
  "einops",          # widely used inside model code
  "yacs",            # config management in training code
  "fvcore",          # flops counting utilities
  "packaging",       # version checks
]

[project.optional-dependencies]
# Image classification training utilities / configs
classification = [
  "torch>=2.0",        # re-add here in case user selects extra
  "torchvision",
  "termcolor",
  "tensorboardX",
  "seaborn",
  "chardet",
  "submitit",
  "pytest",
]
detection = [
  "torch>=2.0",
  "torchvision",
]
segmentation = [
  "torch>=2.0",
  "torchvision",
]
analyze = [
  "matplotlib",
  "seaborn",
]
cuda = [
  "triton; platform_system == 'Linux'",
  "ninja",
]
dev = [
  "black",
  "isort",
  "ruff",
  "pytest",
]
full = [
  "vmamba[classification,segmentation,detection,analyze,cuda]",
]

[project.urls]
Homepage = "https://github.com/MzeroMiko/VMamba"
Repository = "https://github.com/MzeroMiko/VMamba"
Documentation = "https://github.com/MzeroMiko/VMamba"
Issues = "https://github.com/MzeroMiko/VMamba/issues"

[tool.setuptools]
# We keep the single-file "vmamba.py" exposed as a top-level module and also package sub-packages.
py-modules = ["vmamba"]
include-package-data = true

[tool.setuptools.packages.find]
include = [
  "classification*",
  "detection*",
  "segmentation*",
  "analyze*",
  "kernels*",
]
exclude = ["checks.sh", "*.ckpt", "assets*", "experiments*", "logs*", "tools*", "scripts*"]

[tool.setuptools.package-data]
# Include config yaml/py files inside packaged submodules for reproducibility.
"classification.configs" = ["**/*.yaml", "**/*.py"]
"detection.configs" = ["**/*.py"]
"segmentation.configs" = ["**/*.py"]

[tool.vmamba]
enable_selective_scan = true
